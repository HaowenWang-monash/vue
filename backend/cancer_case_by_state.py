# -*- coding: utf-8 -*-
"""cancer_case_by_state.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x6vLo-5-O2zjucMvBkwbVj2pBSWRUHyR
"""



import pandas as pd
import plotly.express as px
import dash
from dash import dcc, html
from dash.dependencies import Input, Output
from flask import Flask

server = Flask(__name__)

app = dash.Dash(__name__, server=server, routes_pathname_prefix="/dash/")

# Load melanoma_data.csv
file_path = "melanoma_data.csv"  # Update if needed
melanoma_df = pd.read_csv(file_path)

# Ensure correct data types
melanoma_df["Year"] = pd.to_numeric(melanoma_df["Year"], errors='coerce')
melanoma_df["Count"] = pd.to_numeric(melanoma_df["Count"], errors='coerce')

# Initialize Dash app
app = dash.Dash(__name__)

# Layout of the app
app.layout = html.Div([
    html.H1("Melanoma Cancer Cases by State"),

    # Dropdown to select State
    dcc.Dropdown(
        id="state-dropdown",
        options=[{"label": state, "value": state} for state in melanoma_df["State_Territory"].unique()],
        value=melanoma_df["State_Territory"].unique()[0],  # Default state
        clearable=False
    ),

    # Graph to display the data
    dcc.Graph(id="melanoma-bar-chart")
])

# Callback to update the graph based on selected state
@app.callback(
    Output("melanoma-bar-chart", "figure"),
    Input("state-dropdown", "value")
)
def update_graph(selected_state):
    # Filter by state
    filtered_df = melanoma_df[(melanoma_df["State_Territory"] == selected_state)]
 
    # Remove the "Persons" category (only show Males & Females)
    filtered_df = filtered_df[filtered_df["Sex"] != "Persons"]
 
    # Create the bar chart
    fig = px.bar(
        filtered_df, x="Year", y="Count", color="Sex",
        title=f"Melanoma Cancer Cases in {selected_state}",
        labels={"Count": "Number of Cases", "Year": "Year"},
        barmode="group"  # Change to grouped bars instead of stacked
    )
    return fig

# Run the app
if __name__ == '__main__':
    app.run_server(debug=True)